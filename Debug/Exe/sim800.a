;#include "common.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <glcd.h>
;#include <delay.h>
;#include <string.h>
;
;#define BUFFER_SIZE 512
;#define MAX_RETRY   3   // Õœ«òÀ—  ⁄œ«œ  ·«‘
;
;
;
;char value[16];
;char at_command[30];
;
;char buffer[BUFFER_SIZE];
;
;
;
;//unsigned char sim800_basic_init(void) {
;//    uart_buffer_reset();
;//
;//    send_at_command("ATE0");   // Œ«„Ê‘ ò—œ‰ Echo
;//    delay_ms(100);
;//
;//    uart_buffer_reset();
;//    send_at_command("AT");     // »——”Ì ¬„«œÂ »Êœ‰ „«éÊ·
;//    if (!read_until_keyword_keep_all(buffer, BUFFER_SIZE, 2000, "OK")) {
;//        glcd_outtextxy(0, 10, "SIM800 not responding!");
;//        return 0; // Failure
;//    }
;//    glcd_outtextxy(0, 0, buffer);
;//    delay_ms(100);
;//
;//    return 1; // Success
;//}
;
;
;void sim800_restart(void) {
; 0004 0026 void sim800_restart(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0004 0027 
; 0004 0028     glcd_clear();
;PCODE: $0000000F VOL: 0
; 0004 0029     glcd_outtextxy(0, 0, "Restarting SIM800...");
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0004 002A 
; 0004 002B     // --- —Ì”  »«›— UART ---
; 0004 002C     uart_buffer_reset();
;PCODE: $00000017 VOL: 0
; 0004 002D 
; 0004 002E     send_at_command("AT+SAPBR=2,1");
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0004 002F     delay_ms(100);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0004 0030 
; 0004 0031 
; 0004 0032     send_at_command("AT+CGATT=0");
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0004 0033     delay_ms(100);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0004 0034 
; 0004 0035 
; 0004 0036     send_at_command("AT+CGATT=1");
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0004 0037     delay_ms(100);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0004 0038 
; 0004 0039     // --- ‰—„ù«›“«— —Ì”  „«éÊ· («Œ Ì«—Ì) ---                      // “„«‰ »—«Ì —Ìù«” «— 
; 0004 003A 
; 0004 003B     send_at_command("AT+CRESET");
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0004 003C     delay_ms(500);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0004 003D 
; 0004 003E     send_at_command("AT+CFUN=0");  // —Ìù«” «—  „«éÊ·
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0004 003F     delay_ms(500);                       // “„«‰ »—«Ì —Ìù«” «— 
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0004 0040 
; 0004 0041 
; 0004 0042     send_at_command("AT+CFUN=1");  // —Ìù«” «—  „«éÊ·
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0004 0043     delay_ms(500);                       // “„«‰ »—«Ì —Ìù«” «— 
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0004 0044 
; 0004 0045 
; 0004 0046 //    send_at_command("AT+CFUN=1,1");  // —Ìù«” «—  „«éÊ·
; 0004 0047 //    delay_ms(2000);
; 0004 0048 
; 0004 0049     // --- Œ«„Ê‘ ò—œ‰ Echo ---
; 0004 004A     uart_buffer_reset();
;PCODE: $00000039 VOL: 0
; 0004 004B     send_at_command("ATE0");
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0004 004C     delay_ms(100);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0004 004D 
; 0004 004E     // --- »——”Ì ¬„«œÂ »Êœ‰ „«éÊ· ---
; 0004 004F     uart_buffer_reset();
;PCODE: $00000040 VOL: 0
; 0004 0050     send_at_command("AT");
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0004 0051     if (!read_until_keyword_keep_all(buffer, BUFFER_SIZE, 2000, "OK")) {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0004 0052         glcd_outtextxy(0, 10, "SIM800 not responding!");
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0004 0053         return;  // ‘ò”  œ— —«Âù«‰œ«“Ì
;PCODE: $00000056 VOL: 0
; 0004 0054     }
; 0004 0055 
; 0004 0056 }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0

	.DSEG
_0x80003:
	.BYTE 0x78
;
;
;unsigned char check_sim(void) {
; 0004 0059 unsigned char check_sim(void) {

	.CSEG
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0004 005A     int stat;
; 0004 005B     char *comma;
; 0004 005C 
; 0004 005D     glcd_clear();
;PCODE: $0000005C VOL: 0
;	stat -> R16,R17
;	*comma -> R18,R19
;PCODE: $0000005D VOL: 0
; 0004 005E     // --- »——”Ì Ê÷⁄Ì  ”Ì„ùò«—  ---
; 0004 005F     uart_buffer_reset();
;PCODE: $0000005E VOL: 0
; 0004 0060     send_at_command("AT+CPIN?");
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0004 0061     if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 5000, "CPIN")) {
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0004 0062         glcd_outtextxy(0, 0, buffer);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0004 0063         delay_ms(1000);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0004 0064 //        if (extract_field_after_keyword(buffer, "+CPIN:", value, sizeof(value))) {
; 0004 0065 //            glcd_outtextxy(0, 16, value);  // ›ﬁÿ READY Ì« PIN
; 0004 0066 //        }
; 0004 0067 //        delay_ms(1000);
; 0004 0068     }
; 0004 0069 
; 0004 006A //    uart_buffer_reset();
; 0004 006B //    send_at_command("AT+CREG?");
; 0004 006C //    if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 5000, "+CREG")) {
; 0004 006D //        glcd_outtextxy(0, 0, buffer);
; 0004 006E //        if (extract_value_after_keyword(buffer, "+CREG:", value, sizeof(value))) {
; 0004 006F //            glcd_outtextxy(0, 16, value);  // ›ﬁÿ READY Ì« PIN
; 0004 0070 //        }
; 0004 0071 //    }
; 0004 0072 
; 0004 0073     // --- »——”Ì Ê÷⁄Ì  ‘»òÂ  « “„«‰ « ’«· ---
; 0004 0074     do {
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0004 0075         glcd_clear();
;PCODE: $00000077 VOL: 0
; 0004 0076         uart_buffer_reset();
;PCODE: $00000078 VOL: 0
; 0004 0077         send_at_command("AT+CREG?");
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0004 0078         if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 2000, "CREG")) {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0004 0079 //            glcd_outtextxy(0, 10, buffer);  // ‰„«Ì‘ Ê÷⁄Ì  ‘»òÂ
; 0004 007A 
; 0004 007B 
; 0004 007C             if (extract_field_after_keyword(buffer, "+CREG:", 1, value, sizeof(value))) {
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0004 007D                 glcd_outtextxy(0, 10, value);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0004 007E                 delay_ms(1000);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0004 007F                 stat = atoi(value);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0004 0080                 if (stat == 1) break;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0004 0081             }
;PCODE: $000000A4 VOL: 0
; 0004 0082         }
;PCODE: $000000A5 VOL: 0
; 0004 0083         glcd_outtextxy(0, 15, "Waiting for network...");
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0004 0084 
; 0004 0085     } while (1);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0004 0086 
; 0004 0087     glcd_outtextxy(0, 20, "Network OK!");
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0004 0088     delay_ms(500);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0004 0089 
; 0004 008A     return 1;  // „Ê›ﬁÌ 
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0004 008B 
; 0004 008C }
;PCODE: $000000BE VOL: 0

	.DSEG
_0x80005:
	.BYTE 0x46
;
;
;
;unsigned char check_signal_quality(void) {
; 0004 0090 unsigned char check_signal_quality(void) {

	.CSEG
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0004 0091 
; 0004 0092     uart_buffer_reset();
;PCODE: $000000C1 VOL: 0
; 0004 0093     send_at_command("AT+CSQ");
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0004 0094 
; 0004 0095     if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 5000, "CSQ")) {
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0004 0096         glcd_clear();
;PCODE: $000000D0 VOL: 0
; 0004 0097         glcd_outtextxy(0, 0, buffer);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0004 0098 
; 0004 0099         if (extract_field_after_keyword(buffer, "+CSQ:", 0, value, sizeof(value))) {
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0004 009A //            int csq = atoi(value);  //  »œÌ· —‘ Â »Â ⁄œœ
; 0004 009B //            glcd_outtextxy(0, 16, value);  // ‰„«Ì‘ „ﬁœ«— ”Ìê‰«·
; 0004 009C //            delay_ms(200);
; 0004 009D             //stat = atoi(value);
; 0004 009E             if (atoi(value) < 5) {
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0004 009F                 // ”Ìê‰«· ÷⁄Ì› => ‰Ì«“ »Â —Ì” 
; 0004 00A0                 return 0;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0004 00A1             } else {
;PCODE: $000000EB VOL: 0
; 0004 00A2                 return 1;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0004 00A3             }
;PCODE: $000000EE VOL: 0
; 0004 00A4         }
; 0004 00A5     }
;PCODE: $000000EF VOL: 0
; 0004 00A6     return 0; // «ê— «’·« Å«”ŒÌ ‰ê—› Ì„
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0004 00A7 }
;PCODE: $000000F3 VOL: 0

	.DSEG
_0x8000D:
	.BYTE 0x11
;
;
;
;
;unsigned char check_signal_with_restart() {
; 0004 00AC unsigned char check_signal_with_restart() {

	.CSEG
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0004 00AD     int i;
; 0004 00AE     for (i = 0; i < MAX_RETRY; i++) {
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;	i -> R16,R17
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0004 00AF         if (check_signal_quality()) {
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0004 00B0             // ”Ìê‰«· ŒÊ»Â° «“ Õ·ﬁÂ Œ«—Ã ‘Ê
; 0004 00B1             return 1;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0004 00B2         }
; 0004 00B3         // «ê— ”Ìê‰«· ‰»Êœ:
; 0004 00B4         sim800_restart();   // —Ìù«” «—  „«éÊ·
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0004 00B5         check_sim();
;PCODE: $00000109 VOL: 0
; 0004 00B6     }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0004 00B7     // «ê— «Ì‰Ã« —”Ìœ Ì⁄‰Ì »⁄œ «“ 3 »«— Â„ ”Ìê‰«· œ—”  ‰‘œ
; 0004 00B8     // „Ì Ê‰Ì ·«ê »êÌ—Ì Ì« Â‰œ· Œÿ« ò‰Ì
; 0004 00B9     printf("No signal after %d retries!\n", MAX_RETRY);
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0004 00BA }
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;
;
;
;unsigned char init_sms(void)
; 0004 00BF {
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0004 00C0     glcd_clear();
;PCODE: $0000011D VOL: 0
; 0004 00C1     glcd_outtextxy(0, 0, "Setting SMS Mode...");
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0004 00C2 
; 0004 00C3     send_at_command("AT+CFUN=1");
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0004 00C4     delay_ms(500);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0004 00C5 
; 0004 00C6     send_at_command("AT+CSCLK=0");
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0004 00C7     delay_ms(200);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0004 00C8 
; 0004 00C9     //  ‰ŸÌ„ SMS
; 0004 00CA     send_at_command("AT+CMGF=1");
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0004 00CB     delay_ms(200);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0004 00CC 
; 0004 00CD     send_at_command("AT+CNMI=2,2,0,0,0");
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0004 00CE     delay_ms(200);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0004 00CF 
; 0004 00D0     send_at_command("AT+CMGDA=\"DEL ALL\"");
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0004 00D1     delay_ms(300);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0004 00D2 
; 0004 00D3     glcd_outtextxy(0, 10, "SMS Ready.");
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0004 00D4     delay_ms(300);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0004 00D5 
; 0004 00D6     return 1;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0004 00D7 }
;PCODE: $0000014C VOL: 0

	.DSEG
_0x80016:
	.BYTE 0x63
;
;
;
;unsigned char init_GPRS(void)
; 0004 00DC {

	.CSEG
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0004 00DD     glcd_clear();
;PCODE: $0000014F VOL: 0
; 0004 00DE     glcd_outtextxy(0, 0, "Connecting to GPRS...");
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0004 00DF 
; 0004 00E0     send_at_command("AT+SAPBR=3,1,\"Contype\",\"GPRS\"");
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0004 00E1     delay_ms(150);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0004 00E2 
; 0004 00E3     sprintf(at_command, "AT+SAPBR=3,1,\"APN\",\"%s\"", APN);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0004 00E4     send_at_command(at_command);
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0004 00E5     delay_ms(150);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0004 00E6 
; 0004 00E7     uart_buffer_reset();
;PCODE: $0000016E VOL: 0
; 0004 00E8 
; 0004 00E9     send_at_command("AT+SAPBR=1,1");
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0004 00EA     if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 10000, "OK")) {
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0004 00EB         glcd_outtextxy(0, 0, buffer);  // »«Ìœ ò· Œ—ÊÃÌ "+CSQ: 11,0" Ê "OK" ç«Å ‘Êœ
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0004 00EC         delay_ms(500);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0004 00ED     }
; 0004 00EE 
; 0004 00EF     glcd_clear();
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0004 00F0     glcd_outtextxy(0, 0, "Fetching IP...");
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0004 00F1 
; 0004 00F2     uart_buffer_reset();
;PCODE: $0000018E VOL: 0
; 0004 00F3 
; 0004 00F4     send_at_command("AT+SAPBR=2,1"); // Request IP
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0004 00F5     if (!read_until_keyword_keep_all(buffer, BUFFER_SIZE, 5000, "SAPBR")) {
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0004 00F6         return 0;  // Failure
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0004 00F7     }
; 0004 00F8     glcd_outtextxy(0, 0, buffer);  // »«Ìœ ò· Œ—ÊÃÌ "+CSQ: 11,0" Ê "OK" ç«Å ‘Êœ
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0004 00F9     delay_ms(500);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0004 00FA 
; 0004 00FB     // If we reach here, it means getting the IP address failed
; 0004 00FC     return 1; // Failure
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0004 00FD }
;PCODE: $000001AA VOL: 0

	.DSEG
_0x80017:
	.BYTE 0x66
;
;
;void gprs_keep_alive(void) {
; 0004 0100 void gprs_keep_alive(void) {

	.CSEG
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0004 0101     glcd_clear();
;PCODE: $000001AD VOL: 0
; 0004 0102     glcd_outtextxy(0, 0, "Checking Internet...");
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0004 0103 
; 0004 0104     // --- ‘—Ê⁄ HTTP ---
; 0004 0105     uart_buffer_reset();
;PCODE: $000001B5 VOL: 0
; 0004 0106     send_at_command("AT+HTTPINIT");
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0004 0107     delay_ms(200);
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0004 0108 
; 0004 0109     // --- «‰ Œ«» ò«‰ò‘‰ GPRS ---
; 0004 010A     uart_buffer_reset();
;PCODE: $000001BC VOL: 0
; 0004 010B     send_at_command("AT+HTTPPARA=\"CID\",1");
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0004 010C     delay_ms(200);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0004 010D 
; 0004 010E     // ---  ‰ŸÌ„ URL ---
; 0004 010F     uart_buffer_reset();
;PCODE: $000001C3 VOL: 0
; 0004 0110     send_at_command("AT+HTTPPARA=\"URL\",\"http://www.google.com\"");
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0004 0111     delay_ms(200);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0004 0112 
; 0004 0113     // --- «—”«· œ—ŒÊ«”  GET ---
; 0004 0114     uart_buffer_reset();
;PCODE: $000001CA VOL: 0
; 0004 0115     send_at_command("AT+HTTPACTION=0"); // 0=GET
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0004 0116     delay_ms(1000); // ’»— »—«Ì Å«”Œ HTTP
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0004 0117 
; 0004 0118     // --- »——”Ì Å«”Œ ---
; 0004 0119     uart_buffer_reset();
;PCODE: $000001D0 VOL: 0
; 0004 011A     if (read_until_keyword_keep_all(buffer, BUFFER_SIZE, 10000, "HTTPACTION:")) {
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0004 011B         // „À«· Œ—ÊÃÌ: +HTTPACTION:0,200,1256
; 0004 011C         int status = 0;
; 0004 011D         char *p = strchr(buffer, ',');  // «Ê·Ì‰ ò«„«
; 0004 011E         if (p) {
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;	status -> Y+2
;	*p -> Y+0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0004 011F             status = atoi(p + 1);      // ⁄œœ »⁄œ «“ «Ê·Ì‰ ò«„« = òœ Ê÷⁄Ì  HTTP
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0004 0120         }
; 0004 0121 
; 0004 0122         if (status == 200) {
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0004 0123             glcd_outtextxy(0, 16, "Internet OK");
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0004 0124         } else {
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0004 0125             glcd_outtextxy(0, 16, "Internet Failed");
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0004 0126         }
;PCODE: $00000201 VOL: 0
; 0004 0127     } else {
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0004 0128         glcd_outtextxy(0, 16, "No response!");
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0004 0129     }
;PCODE: $0000020C VOL: 0
; 0004 012A 
; 0004 012B     delay_ms(1000);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0004 012C 
; 0004 012D     // --- Å«Ì«‰ HTTP ---
; 0004 012E     uart_buffer_reset();
;PCODE: $0000020F VOL: 0
; 0004 012F     send_at_command("AT+HTTPTERM");
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0004 0130     delay_ms(200);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0004 0131 }
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0

	.DSEG
_0x8001A:
	.BYTE 0xB0
;

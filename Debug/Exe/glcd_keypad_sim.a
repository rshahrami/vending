;#include <mega64a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <stdio.h>
;#include <string.h>
;
;
;#define APN_MOD "mcinet"
;#define SERVER_URL "http://google.com/api/authorize" // AI?? IP ???? O?C
;
;// »«›— »—«Ì œ—Ì«›  œ«œÂ «“ „«éÊ·
;char header_buffer[100];
;char content_buffer[100];
;char ip_address_buffer[16];
;// »«›— »—«Ì ‘„«—Â  ·›‰ «” Œ—«Ã ‘œÂ
;char phone_number[16];
;// »«›— »—«Ì ŒÊ«‰œ‰ Å«”Œ Â«Ì „«éÊ·
;char response_buffer[100];
;
;//// --- E???? ???E ? ??? ??E?? ---
;#define MOTOR_DDR DDRE
;#define MOTOR_PORT PORTE
;#define MOTOR_PIN_1 2
;#define MOTOR_PIN_2 3
;#define MOTOR_PIN_3 4
;#define MOTOR_PIN_4 5
;
;
;// E???? ???E C E?C? ????I
;#define KEYPAD_PORT PORTC
;#define KEYPAD_DDR DDRC
;#define KEYPAD_PIN PINC
;
;// E???? ?????C? ?E?? (I????)
;#define COL1_PIN 0
;#define COL2_PIN 1
;#define COL3_PIN 2
;
;// E???? ?????C? ??? (???I?) - E? ???E ?C??EE
;#define ROW1_PIN 7
;#define ROW2_PIN 5
;#define ROW3_PIN 6
;#define ROW4_PIN 4
;
;
;
;char get_key(void)
; 0000 0031 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0032     unsigned char row, col;
; 0000 0033     const unsigned char column_pins[3] = {COL1_PIN, COL2_PIN, COL3_PIN};
; 0000 0034     const unsigned char row_pins[4] = {ROW1_PIN, ROW2_PIN, ROW3_PIN, ROW4_PIN};
; 0000 0035 
; 0000 0036     const char key_map[4][3] = {
; 0000 0037         {'1', '2', '3'},
; 0000 0038         {'4', '5', '6'},
; 0000 0039         {'7', '8', '9'},
; 0000 003A         {'*', '0', '#'}
; 0000 003B     };
; 0000 003C 
; 0000 003D     for (col = 0; col < 3; col++)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	row -> R17
;	col -> R16
;	column_pins -> Y+18
;	row_pins -> Y+14
;	key_map -> Y+2
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003E     {
; 0000 003F         KEYPAD_PORT |= (1 << COL1_PIN) | (1 << COL2_PIN) | (1 << COL3_PIN);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0040         KEYPAD_PORT &= ~(1 << column_pins[col]);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0041 
; 0000 0042         for (row = 0; row < 4; row++)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0043         {
; 0000 0044             if (!(KEYPAD_PIN & (1 << row_pins[row])))
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0045             {
; 0000 0046                 delay_ms(10);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0047 
; 0000 0048                 if (!(KEYPAD_PIN & (1 << row_pins[row])))
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0049                 {
; 0000 004A                     while (!(KEYPAD_PIN & (1 << row_pins[row])));
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 004B                     return key_map[row][col];
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 004C                 }
; 0000 004D             }
;PCODE: $00000073 VOL: 0
; 0000 004E         }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 004F     }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0050 
; 0000 0051     // C?? ??? ???I? ?O?I? ?OI? E?I? ??IC? ??? (NULL) ?C E???IC?
; 0000 0052     return 0;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0053 }
;PCODE: $00000086 VOL: 0
;
;
;
;
;
;
;//  «»⁄ ”«œÂ »—«Ì «—”«· œ” Ê—«  AT
;void send_at_command(char *command)
; 0000 005C {
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 005D     printf("%s\r\n", command);
;PCODE: $00000089 VOL: 0
;	*command -> Y+0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 005E }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;
;unsigned char init_sms(void)
; 0000 0061 {
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0062     glcd_clear();
;PCODE: $00000099 VOL: 0
; 0000 0063     glcd_outtextxy(0, 0, "Setting SMS Mode...");
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0064     send_at_command("AT+CMGF=1");
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0065     delay_ms(500);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0066 
; 0000 0067     send_at_command("AT+CNMI=2,2,0,0,0");
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0068     delay_ms(500);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0069 
; 0000 006A     send_at_command("AT+CMGDA=\"DEL ALL\"");
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 006B     delay_ms(2000);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 006C 
; 0000 006D     glcd_outtextxy(0, 10, "SMS Ready.");
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 006E     delay_ms(1000);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 006F     return 1;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0070 }
;PCODE: $000000BB VOL: 0

	.DSEG
_0xF:
	.BYTE 0x4E
;
;
;unsigned char init_GPRS(void)
; 0000 0074 {

	.CSEG
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0075     char at_command[50];
; 0000 0076     glcd_clear();
;PCODE: $000000BE VOL: 0
;	at_command -> Y+0
;PCODE: $000000BF VOL: 0
; 0000 0077     glcd_outtextxy(0, 0, "Setting GPRS Mode...");
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0078     send_at_command("AT+SAPBR=3,1,\"Contype\",\"GPRS\"");
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0079     delay_ms(1500);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 007A 
; 0000 007B 
; 0000 007C     //  ‰ŸÌ„ APN »« „ﬁœ«—  ⁄—Ì› ‘œÂ œ— APN_MOD
; 0000 007D     sprintf(at_command, "AT+SAPBR=3,1,\"APN\",\"%s\"", APN_MOD);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007E     send_at_command(at_command);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 007F     delay_ms(1500);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0080 
; 0000 0081     send_at_command("AT+SAPBR=1,1");
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0082     delay_ms(3000);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0083 
; 0000 0084     send_at_command("AT+SAPBR=2,1");
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0085     delay_ms(1500);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0086 
; 0000 0087     glcd_outtextxy(0, 10, "IP:");
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0088 //    glcd_outtextxy(10, 40, motor_msg);
; 0000 0089     delay_ms(1000);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 008A     return 1;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 008B }
;PCODE: $000000F3 VOL: 0

	.DSEG
_0x10:
	.BYTE 0x51
;
;//unsigned char init_GPRS(void)
;//{
;//    char at_command[50];
;//    char response_buffer[100]; // »«›—Ì »—«Ì ŒÊ«‰œ‰ Å«”ŒùÂ«Ì „«éÊ·
;//    int timeout = 0;
;//
;//    glcd_clear();
;//    glcd_outtextxy(0, 0, "Setting GPRS Mode...");
;//    send_at_command("AT+SAPBR=3,1,\"Contype\",\"GPRS\"");
;//    delay_ms(1500);
;//
;//    sprintf(at_command, "AT+SAPBR=3,1,\"APN\",\"%s\"", APN_MOD);
;//    send_at_command(at_command);
;//    delay_ms(1500);
;//
;//    send_at_command("AT+SAPBR=1,1"); // « ’«· »Â GPRS
;//    delay_ms(3000);
;//
;//    // --- »Œ‘ ÃœÌœ »—«Ì œ—Ì«›  Ê ‰„«Ì‘ IP ---
;//    glcd_clear();
;//    glcd_outtextxy(0, 0, "Fetching IP Address...");
;//    send_at_command("AT+SAPBR=2,1"); // «—”«· œ” Ê— œ—ŒÊ«”  IP
;//
;//    // „‰ Ÿ— Å«”Œ „Ìù„«‰Ì„ Ê ¬‰ —« „ÌùŒÊ«‰Ì„
;//    while(timeout < 100) // ÕœÊœ 5 À«‰ÌÂ »—«Ì œ—Ì«›  Å«”Œ ’»— ò‰
;//    {
;//        glcd_outtextxy(0, 10, "level1");
;//        delay_ms(10);
;//        if (gets(response_buffer, sizeof(response_buffer)))
;//        {
;//            // »——”Ì „Ìùò‰Ì„ òÂ ¬Ì« «Ì‰ Â„«‰ Œÿ Å«”Œ Õ«ÊÌ IP «”  Ì« ‰Â
;//            // Å«”Œ „Ê›ﬁÌ ù¬„Ì“ ‘»ÌÂ »Â «Ì‰ «” : +SAPBR: 1,1,"10.150.80.75"
;//            glcd_outtextxy(0, 10, "level2");
;//            delay_ms(100);
;//            if (strstr(response_buffer, "+SAPBR: 1,1,") != NULL)
;//            {
;//                char* token;
;//
;//                // »« «” ›«œÂ «“ strtok° —‘ Â —« »— «”«” ò«—«ò — " Ãœ« „Ìùò‰Ì„
;//                token = strtok(response_buffer, "\""); // «Ì‰ »Œ‘ «Ê· —‘ Â «” 
;//                token = strtok(NULL, "\"");           // «Ì‰  Êò‰ œÊ„° Ì⁄‰Ì Â„«‰ IP «” 
;//                glcd_outtextxy(0, 10, "level3");
;//                delay_ms(10);
;//                if (token)
;//                {
;//                    strcpy(ip_address_buffer, token); // IP —« œ— »«›— òÅÌ „Ìùò‰Ì„
;//
;//                    glcd_clear();
;//                    glcd_outtextxy(0, 10, "GPRS Connected!");
;//                    glcd_outtextxy(0, 25, "IP:");
;//                    glcd_outtextxy(20, 25, ip_address_buffer); // ‰„«Ì‘ IP —ÊÌ GLCD
;//
;//                    delay_ms(1000); // 3 À«‰ÌÂ IP —« ‰„«Ì‘ »œÂ
;//                    return 1; // „ﬁœ«—œÂÌ GPRS „Ê›ﬁ »Êœ
;//                }
;//            }
;//        }
;//        delay_ms(1);
;//        timeout++;
;//    }
;//
;//    // «ê— »⁄œ «“ 5 À«‰ÌÂ Å«”ŒÌ œ—Ì«›  ‰‘œ
;//    glcd_clear();
;//    glcd_outtextxy(0, 20, "Failed to get IP!");
;//    delay_ms(2000);
;//    return 0; // „ﬁœ«—œÂÌ GPRS ‰«„Ê›ﬁ »Êœ
;//}
;//
;
;void activate_motor(int product_id)
; 0000 00D3 {

	.CSEG
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00D4     unsigned char motor_pin;
; 0000 00D5     char motor_msg[20];
; 0000 00D6 
; 0000 00D7     switch (product_id)
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;	product_id -> Y+21
;	motor_pin -> R17
;	motor_msg -> Y+1
;PCODE: $000000F9 VOL: 0
; 0000 00D8     {
; 0000 00D9         case 1: motor_pin = MOTOR_PIN_1; break;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00DA         case 2: motor_pin = MOTOR_PIN_2; break;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00DB         case 3: motor_pin = MOTOR_PIN_3; break;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00DC         default: return;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00DD     }
;PCODE: $00000110 VOL: 0
; 0000 00DE 
; 0000 00DF     sprintf(motor_msg, "MOTOR %d ON!", product_id);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00E0     glcd_clear();
;PCODE: $0000011D VOL: 0
; 0000 00E1     glcd_outtextxy(10, 20, motor_msg);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00E2     MOTOR_PORT |= (1 << motor_pin);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00E3     delay_ms(10000);
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00E4     MOTOR_PORT &= ~(1 << motor_pin);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00E5 
; 0000 00E6     sprintf(motor_msg, "MOTOR %d OFF!", product_id);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00E7     glcd_outtextxy(10, 40, motor_msg);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00E8     delay_ms(2000);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00E9 }
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;
;unsigned char check_authorization(char* number)
; 0000 00EC {
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00ED     char at_command[150];
; 0000 00EE     int timeout = 0;
; 0000 00EF 
; 0000 00F0     glcd_clear();
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;	*number -> Y+152
;	at_command -> Y+2
;	timeout -> R16,R17
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00F1     glcd_outtextxy(0, 0, "Authorizing...");
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00F2     glcd_outtextxy(0, 10, number);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00F3 
; 0000 00F4     // 1. „ﬁœ«—œÂÌ «Ê·ÌÂ ”—ÊÌ” HTTP
; 0000 00F5     send_at_command("AT+HTTPINIT");
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00F6     delay_ms(1000);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00F7 
; 0000 00F8     // 2.  ‰ŸÌ„ Å«—«„ —Â«Ì HTTP (CID Ê URL)
; 0000 00F9     send_at_command("AT+HTTPPARA=\"CID\",1");
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00FA     delay_ms(500);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00FB 
; 0000 00FC     // ”«Œ  URL ‰Â«ÌÌ »Â Â„—«Â ‘„«—Â  ·›‰
; 0000 00FD     sprintf(at_command, "AT+HTTPPARA=\"URL\",\"%s?phone=%s\"", SERVER_URL, number);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00FE     send_at_command(at_command);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00FF     delay_ms(1000);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0100 
; 0000 0101     // 3. «—”«· œ—ŒÊ«”  GET (Action = 0)
; 0000 0102     send_at_command("AT+HTTPACTION=0");
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0103     delay_ms(1000); // ò„Ì “„«‰ »—«Ì ‘—Ê⁄ ⁄„·Ì« 
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 0104 
; 0000 0105     // 4. „‰ Ÿ— Å«”Œ »„«‰
; 0000 0106     // Å«”Œ »«Ìœ çÌ“Ì ‘»ÌÂ »Â "+HTTPACTION: 0,200,LENGTH" »«‘œ
; 0000 0107 //    while(timeout < 50) // Õœ«òÀ— 10 À«‰ÌÂ „‰ Ÿ— »„«‰
; 0000 0108 //    {
; 0000 0109 //        if (gets(response_buffer, sizeof(response_buffer)))
; 0000 010A //        {
; 0000 010B //            // »——”Ì „Ìùò‰Ì„ òÂ ¬Ì« Å«”Œ „Ê›ﬁÌ ù¬„Ì“ (òœ 200) «”  Ì« ‰Â
; 0000 010C //            if (strstr(response_buffer, "+HTTPACTION: 0,404") != NULL)
; 0000 010D //            {
; 0000 010E //                glcd_outtextxy(0, 30, "Authorized!");
; 0000 010F //                delay_ms(1500);
; 0000 0110 //                send_at_command("AT+HTTPTERM"); // Œ« „Â œ«œ‰ »Â ”—ÊÌ” HTTP
; 0000 0111 //                return 1; // „ÃÊ“  «ÌÌœ ‘œ
; 0000 0112 //            }
; 0000 0113 //            // «ê— Œÿ«Ì Œ«’Ì —Œ œ«œÂ »«‘œ
; 0000 0114 //            else if (strstr(response_buffer, "+HTTPACTION: 0,") != NULL)
; 0000 0115 //            {
; 0000 0116 //                break; // «“ Õ·ﬁÂ Œ«—Ã ‘Ê çÊ‰ Å«”Œ œ—Ì«›  ‘œÂ «„« 200 ‰Ì” 
; 0000 0117 //            }
; 0000 0118 //            glcd_clear();
; 0000 0119 //            glcd_outtextxy(0, 0, "not");
; 0000 011A //        }
; 0000 011B //        delay_ms(10);
; 0000 011C //        timeout += 10;
; 0000 011D //    }
; 0000 011E 
; 0000 011F     // «ê— »Â «Ì‰Ã« —”ÌœÌ„ Ì⁄‰Ì Ì«  «Ì„ù«Ê  ‘œÂ Ì« Å«”Œ 200 ‰»ÊœÂ
; 0000 0120     glcd_clear();
;PCODE: $00000187 VOL: 0
; 0000 0121     glcd_outtextxy(5, 25, "Authorization Failed!");
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0122     delay_ms(1000);
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0123     send_at_command("AT+HTTPTERM"); // Œ« „Â œ«œ‰ »Â ”—ÊÌ” HTTP
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 0124 //    return 0; // „ÃÊ“ —œ ‘œ
; 0000 0125     return 1;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0126 }
;PCODE: $0000019B VOL: 0

	.DSEG
_0x18:
	.BYTE 0x61
;
;void main(void)
; 0000 0129 {

	.CSEG
;PCODE: $0000019C VOL: 0
; 0000 012A     GLCDINIT_t glcd_init_data;
; 0000 012B 
; 0000 012C     // --- «Ì‰ »Œ‘ „ﬁœ«—œÂÌ «Ê·ÌÂ ÅÊ— ùÂ« Ê USART «”  òÂ «“ òœ ŒÊœ «‰ òÅÌ ‘œÂ ---
; 0000 012D     // --- Ê ’ÕÌÕ «” . ‰Ì«“Ì »Â  €ÌÌ— ¬‰ ‰Ì” .                             ---
; 0000 012E     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000019D VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 012F     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0130     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0131     PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0132     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0133     PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0134     DDRE=(0<<DDE7) | (0<<DDE6) | (1<<DDE5) | (1<<DDE4) | (1<<DDE3) | (1<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0135     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0136     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0137     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0138     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0139     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 013A     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 013B     UBRR0H=0x00;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 013C     UBRR0L=0x33; // 9600 Baud Rate for 8MHz clock
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 013D     MCUCSR = (1 << JTD);
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 013E     MCUCSR = (1 << JTD);
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 013F     glcd_init_data.font=font5x7;
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 0140     glcd_init_data.readxmem=NULL;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0141     glcd_init_data.writexmem=NULL;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0142     glcd_init(&glcd_init_data);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0143     glcd_setfont(font5x7);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0144     // --- Å«Ì«‰ »Œ‘ „ﬁœ«—œÂÌ «Ê·ÌÂ ---
; 0000 0145 
; 0000 0146  glcd_clear();
;PCODE: $000001CB VOL: 0
; 0000 0147     glcd_outtextxy(0, 0, "Module Init...");
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0148     delay_ms(1000);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 0149 
; 0000 014A     send_at_command("ATE0");
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 014B     delay_ms(500);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 014C     send_at_command("AT");
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 014D     delay_ms(500);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 014E 
; 0000 014F     if (!init_sms()) { glcd_outtextxy(0, 10, "SMS Init Failed!"); while(1); }
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0150     if (!init_GPRS()) { glcd_outtextxy(0, 10, "GPRS Init Failed!"); while(1); }
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0151 
; 0000 0152     glcd_clear();
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0153     glcd_outtextxy(0, 0, "System Ready.");
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0154     glcd_outtextxy(0, 10, "Waiting for SMS...");
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0155 
; 0000 0156     while (1)
;PCODE: $0000020A VOL: 0
; 0000 0157     {
; 0000 0158         char sms_char;
; 0000 0159         char key_pressed;
; 0000 015A         char display_buffer[2] = {0};
; 0000 015B         int product_id = 0;
; 0000 015C 
; 0000 015D         memset(header_buffer, 0, sizeof(header_buffer));
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;	glcd_init_data -> Y+6
;	sms_char -> Y+5
;	key_pressed -> Y+4
;	display_buffer -> Y+2
;	product_id -> Y+0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 015E 
; 0000 015F         if (gets(header_buffer, sizeof(header_buffer)))
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0160         {
; 0000 0161             // çò ò‰ òÂ ¬Ì« «Ì‰ Œÿ° Â„«‰ Âœ— ÅÌ«„ò «” ø
; 0000 0162             if (strstr(header_buffer, "+CMT:") != NULL)
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0163             {
; 0000 0164                 char* token;
; 0000 0165 
; 0000 0166                 // «” Œ—«Ã ‘„«—Â  ·›‰ «“ Âœ—
; 0000 0167                 // ›—„  Âœ—: +CMT: "PHONE_NUMBER","","TIMESTAMP"
; 0000 0168                 token = strtok(header_buffer, "\""); // »Œ‘ «Ê· ﬁ»· «“ "
;PCODE: $00000229 VOL: 0
;	glcd_init_data -> Y+8
;	sms_char -> Y+7
;	key_pressed -> Y+6
;	display_buffer -> Y+4
;	product_id -> Y+2
;	*token -> Y+0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0169                 if (token != NULL) {
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 016A                     token = strtok(NULL, "\""); // «Ì‰  Êò‰ Â„«‰ ‘„«—Â  ·›‰ «” 
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 016B                     if (token != NULL) {
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 016C                         strcpy(phone_number, token);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 016D 
; 0000 016E                         // ===== »Œ‘ ÃœÌœ: »——”Ì „ÃÊ“ =====
; 0000 016F                         if (check_authorization(phone_number))
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0170                         {
; 0000 0171                             // „ÃÊ“  «ÌÌœ ‘œ° Õ«·« «œ«„Â „‰ÿﬁ ﬁ»·Ì —« «Ã—« ò‰
; 0000 0172                             memset(content_buffer, 0, sizeof(content_buffer));
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0173                             gets(content_buffer, sizeof(content_buffer)); // „Õ Ê«Ì ÅÌ«„ò —« »ŒÊ«‰
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0174 
; 0000 0175                             if (strlen(content_buffer) > 0)
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 0176                             {
; 0000 0177                                 sms_char = content_buffer[0];
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0178 
; 0000 0179 
; 0000 017A                                 if (sms_char == '1' || sms_char == '2' || sms_char == '3')
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 017B                                 {
; 0000 017C                                     int timeout_counter = 0;
; 0000 017D                                     glcd_clear();
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;	glcd_init_data -> Y+10
;	sms_char -> Y+9
;	key_pressed -> Y+8
;	display_buffer -> Y+6
;	product_id -> Y+4
;	*token -> Y+2
;	timeout_counter -> Y+0
;PCODE: $00000266 VOL: 0
; 0000 017E                                     glcd_outtextxy(0, 5, "SMS Code:");
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 017F                                     display_buffer[0] = sms_char;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 0180                                     glcd_outtextxy(70, 5, display_buffer);
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0181                                     glcd_outtextxy(0, 25, "Enter code on keypad:");
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 0182 
; 0000 0183                                     for(timeout_counter = 0; timeout_counter < 200; timeout_counter++)
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0184                                     {
; 0000 0185                                        key_pressed = get_key();
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 0186                                        if(key_pressed != 0) break; // «ê— ò·ÌœÌ ›‘—œÂ ‘œ° «“ Õ·ﬁÂ Œ«—Ã ‘Ê
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 0187                                        delay_ms(10);
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0188                                     }
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 0189 
; 0000 018A                                     // «ê— Å” «“ ? À«‰ÌÂ ò·ÌœÌ ›‘—œÂ ‰‘œ
; 0000 018B                                     if(key_pressed == 0) {
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 018C                                         glcd_clear();
;PCODE: $0000029A VOL: 0
; 0000 018D                                         glcd_outtextxy(10, 25, "Timeout! Try again.");
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 018E                                         delay_ms(1000);
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 018F                                         glcd_clear();
;PCODE: $000002A4 VOL: 0
; 0000 0190                                         glcd_outtextxy(0, 0, "System Ready.");
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 0191                                         glcd_outtextxy(0, 10, "Waiting for SMS...");
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0192                                         continue; // »—‰«„Â —« »Â «» œ«Ì Õ·ﬁÂ while(1) »—ê—œ«‰
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 0193                                     }
; 0000 0194 
; 0000 0195                                     glcd_outtextxy(0, 45, "You pressed:");
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 0196                                     display_buffer[0] = key_pressed;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 0197                                     glcd_outtextxy(90, 45, display_buffer);
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0198                                     delay_ms(1000);
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0199 
; 0000 019A                                     if (key_pressed == sms_char)
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 019B                                     {
; 0000 019C                                         glcd_clear();
;PCODE: $000002CB VOL: 0
; 0000 019D                                         glcd_outtextxy(10, 25, "Code is CORRECT!");
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 019E                                         delay_ms(1500);
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 019F                                         product_id = sms_char - '0';
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01A0                                         activate_motor(product_id);
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 01A1                                     }
; 0000 01A2                                     else
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 01A3                                     {
; 0000 01A4                                         glcd_clear();
;PCODE: $000002DD VOL: 0
; 0000 01A5                                         glcd_outtextxy(5, 25, "Error in entry!");
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01A6                                         delay_ms(2000);
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01A7                                     }
;PCODE: $000002E7 VOL: 0
; 0000 01A8                                 }
;PCODE: $000002E8 VOL: 0
; 0000 01A9                                 else
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01AA                                 {
; 0000 01AB                                    glcd_clear();
;PCODE: $000002EB VOL: 0
; 0000 01AC                                    glcd_outtextxy(5, 25, "SMS code is invalid!");
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 01AD                                    delay_ms(2000);
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 01AE                                 }
;PCODE: $000002F5 VOL: 0
; 0000 01AF                             }
; 0000 01B0                         }
;PCODE: $000002F6 VOL: 0
; 0000 01B1                         // «ê— „ÃÊ“  «ÌÌœ ‰‘Êœ°  «»⁄ check_authorization ÅÌ«„ Œÿ« ‰„«Ì‘ œ«œÂ
; 0000 01B2                         // Ê »—‰«„Â »Â ’Ê—  ŒÊœò«— »Â Õ«·  «‰ Ÿ«— »«“ „Ìùê—œœ.
; 0000 01B3                     }
;PCODE: $000002F7 VOL: 0
; 0000 01B4                 }
;PCODE: $000002F8 VOL: 0
; 0000 01B5 
; 0000 01B6                 // ’›ÕÂ —« »—«Ì ÅÌ«„ »⁄œÌ ¬„«œÂ ò‰
; 0000 01B7                 glcd_clear();
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 01B8                 glcd_outtextxy(0, 0, "System Ready.");
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 01B9                 glcd_outtextxy(0, 10, "Waiting for SMS...");
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 01BA             }
;PCODE: $00000309 VOL: 0
; 0000 01BB         }
;PCODE: $0000030A VOL: 0
; 0000 01BC     }
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 01BD }
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0

	.DSEG
_0x19:
	.BYTE 0x11A
;

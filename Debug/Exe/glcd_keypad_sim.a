;#include <mega64a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <stdio.h>
;#include <string.h>
;
;// »«›— »—«Ì œ—Ì«›  œ«œÂ «“ „«éÊ·
;char header_buffer[100];
;char content_buffer[100];
;
;
;// E???? ???E C E?C? ????I
;#define KEYPAD_PORT PORTC
;#define KEYPAD_DDR DDRC
;#define KEYPAD_PIN PINC
;
;// E???? ?????C? ?E?? (I????)
;#define COL1_PIN 0
;#define COL2_PIN 1
;#define COL3_PIN 2
;
;// E???? ?????C? ??? (???I?) - E? ???E ?C??EE
;#define ROW1_PIN 7
;#define ROW2_PIN 5
;#define ROW3_PIN 6
;#define ROW4_PIN 4
;
;char pressed_key;
;
;char get_key(void)
; 0000 0020 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0021     unsigned char row, col;
; 0000 0022     const unsigned char column_pins[3] = {COL1_PIN, COL2_PIN, COL3_PIN};
; 0000 0023     const unsigned char row_pins[4] = {ROW1_PIN, ROW2_PIN, ROW3_PIN, ROW4_PIN};
; 0000 0024 
; 0000 0025     const char key_map[4][3] = {
; 0000 0026         {'1', '2', '3'},
; 0000 0027         {'4', '5', '6'},
; 0000 0028         {'7', '8', '9'},
; 0000 0029         {'*', '0', '#'}
; 0000 002A     };
; 0000 002B 
; 0000 002C     for (col = 0; col < 3; col++)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	row -> R17
;	col -> R16
;	column_pins -> Y+18
;	row_pins -> Y+14
;	key_map -> Y+2
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002D     {
; 0000 002E         KEYPAD_PORT |= (1 << COL1_PIN) | (1 << COL2_PIN) | (1 << COL3_PIN);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002F         KEYPAD_PORT &= ~(1 << column_pins[col]);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0030 
; 0000 0031         for (row = 0; row < 4; row++)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0032         {
; 0000 0033             if (!(KEYPAD_PIN & (1 << row_pins[row])))
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0034             {
; 0000 0035                 delay_ms(10);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0036 
; 0000 0037                 if (!(KEYPAD_PIN & (1 << row_pins[row])))
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0038                 {
; 0000 0039                     while (!(KEYPAD_PIN & (1 << row_pins[row])));
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003A                     return key_map[row][col];
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 003B                 }
; 0000 003C             }
;PCODE: $00000073 VOL: 0
; 0000 003D         }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 003E     }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 003F 
; 0000 0040     // C?? ??? ???I? ?O?I? ?OI? E?I? ??IC? ??? (NULL) ?C E???IC?
; 0000 0041     return 0;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0042 }
;PCODE: $00000086 VOL: 0
;
;
;
;
;
;
;//  «»⁄ ”«œÂ »—«Ì «—”«· œ” Ê—«  AT
;void send_at_command(char *command)
; 0000 004B {
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 004C     printf("%s\r\n", command);
;PCODE: $00000089 VOL: 0
;	*command -> Y+0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 004D }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;
;unsigned char init_sms(void)
; 0000 0050 {
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0051     glcd_clear();
;PCODE: $00000099 VOL: 0
; 0000 0052     glcd_outtextxy(0, 0, "Setting SMS Mode...");
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0053     send_at_command("AT+CMGF=1");
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0054     delay_ms(500);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0055 
; 0000 0056     send_at_command("AT+CNMI=2,2,0,0,0");
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0057     delay_ms(500);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0058 
; 0000 0059     send_at_command("AT+CMGDA=\"DEL ALL\"");
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 005A     delay_ms(2000);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 005B 
; 0000 005C     glcd_outtextxy(0, 10, "SMS Ready.");
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 005D     delay_ms(1000);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 005E     return 1;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 005F }
;PCODE: $000000BB VOL: 0

	.DSEG
_0xF:
	.BYTE 0x4E
;
;
;
;
;void main(void)
; 0000 0065 {

	.CSEG
;PCODE: $000000BC VOL: 0
; 0000 0066     GLCDINIT_t glcd_init_data;
; 0000 0067 
; 0000 0068     // --- «Ì‰ »Œ‘ „ﬁœ«—œÂÌ «Ê·ÌÂ ÅÊ— ùÂ« Ê USART «”  òÂ «“ òœ ŒÊœ «‰ òÅÌ ‘œÂ ---
; 0000 0069     // --- Ê ’ÕÌÕ «” . ‰Ì«“Ì »Â  €ÌÌ— ¬‰ ‰Ì” .                             ---
; 0000 006A     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $000000BD VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 006B     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 006C     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 006D     PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 006E     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 006F     PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0070     DDRE=(0<<DDE7) | (0<<DDE6) | (1<<DDE5) | (1<<DDE4) | (1<<DDE3) | (1<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0071     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0072     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0073     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0074     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0075     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0076     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0077     UBRR0H=0x00;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0078     UBRR0L=0x33; // 9600 Baud Rate for 8MHz clock
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0079     MCUCSR = (1 << JTD);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 007A     MCUCSR = (1 << JTD);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 007B     glcd_init_data.font=font5x7;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 007C     glcd_init_data.readxmem=NULL;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 007D     glcd_init_data.writexmem=NULL;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 007E     glcd_init(&glcd_init_data);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 007F     glcd_setfont(font5x7);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0080     // --- Å«Ì«‰ »Œ‘ „ﬁœ«—œÂÌ «Ê·ÌÂ ---
; 0000 0081 
; 0000 0082     glcd_clear();
;PCODE: $000000EB VOL: 0
; 0000 0083     glcd_outtextxy(0, 0, "Module Init...");
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0084     delay_ms(1000);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0085 
; 0000 0086     // 1. Œ«„Ê‘ ò—œ‰ «òÊ
; 0000 0087     send_at_command("ATE0");
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0088     delay_ms(500);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0089     send_at_command("AT");
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 008A     delay_ms(500);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 008B 
; 0000 008C 
; 0000 008D     if (!init_sms()) { glcd_outtextxy(0, 10, "SMS Init Failed!"); while(1); }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 008E //    // 2.  ‰ŸÌ„ Õ«·  ÅÌ«„ò »Â TEXT
; 0000 008F //    send_at_command("AT+CMGF=1");
; 0000 0090 //    delay_ms(500);
; 0000 0091 //
; 0000 0092 //    // 3.  ‰ŸÌ„ „«éÊ· »—«Ì «—”«· „” ﬁÌ„ ÅÌ«„ò »Â ÅÊ—  ”—Ì«·
; 0000 0093 //    send_at_command("AT+CNMI=2,2,0,0,0");
; 0000 0094 //    delay_ms(500);
; 0000 0095 //
; 0000 0096 //    // 4. Õ–›  „«„ ÅÌ«„ò Â«Ì ﬁ»·Ì »—«Ì «ÿ„Ì‰«‰
; 0000 0097 //    send_at_command("AT+CMGDA=\"DEL ALL\"");
; 0000 0098 //    delay_ms(2000);
; 0000 0099 
; 0000 009A     glcd_clear();
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 009B     glcd_outtextxy(0, 0, "System Ready.");
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 009C     glcd_outtextxy(0, 10, "Waiting for SMS...");
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 009D 
; 0000 009E 
; 0000 009F     // Õ·ﬁÂ «’·Ì »—‰«„Â
; 0000 00A0     while (1)
;PCODE: $0000011C VOL: 0
; 0000 00A1     {
; 0000 00A2         char sms_char;
; 0000 00A3         char key_pressed;
; 0000 00A4         char display_buffer[2] = {0}; // »«›— òÊçò »—«Ì ‰„«Ì‘ Ìò ò«—«ò —
; 0000 00A5         // Â„Ì‘Â ¬„«œÂ œ—Ì«›  Œÿ «Ê· (Âœ—) »«‘
; 0000 00A6         memset(header_buffer, 0, sizeof(header_buffer));
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;	glcd_init_data -> Y+4
;	sms_char -> Y+3
;	key_pressed -> Y+2
;	display_buffer -> Y+0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00A7 
; 0000 00A8         // «ê— ŒÿÌ œ—Ì«›  ‘œ...
; 0000 00A9         if (gets(header_buffer, sizeof(header_buffer)))
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00AA         {
; 0000 00AB             // ›Ê—« çò ò‰ òÂ ¬Ì« «Ì‰ Œÿ° Â„«‰ Âœ— ÅÌ«„ò «” ø
; 0000 00AC             if (strstr(header_buffer, "+CMT:") != NULL)
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00AD             {
; 0000 00AE                 // «ê— Âœ— »Êœ° »œÊ‰ ÂÌç ò«— «÷«›Âù«Ì° »·«›«’·Â Œÿ »⁄œÌ („Õ Ê«) —« »ŒÊ«‰
; 0000 00AF                 // «Ì‰ ò«— «“ ”——Ì“ ‘œ‰ »«›— Ã·ÊêÌ—Ì „Ìùò‰œ
; 0000 00B0                 memset(content_buffer, 0, sizeof(content_buffer));
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00B1                 gets(content_buffer, sizeof(content_buffer));
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00B2 
; 0000 00B3                 // ==========================================================
; 0000 00B4                 // ===== ‘—Ê⁄ „‰ÿﬁ ÃœÌœ »—«Ì Å—œ«“‘ „Õ Ê«Ì ÅÌ«„ò Ê òÌÅœ =====
; 0000 00B5                 // ==========================================================
; 0000 00B6 
; 0000 00B7                 // ›ﬁÿ œ— ’Ê— Ì «œ«„Â »œÂ òÂ „Õ Ê«Ì ÅÌ«„ò Œ«·Ì ‰»«‘œ
; 0000 00B8                 if (strlen(content_buffer) > 0)
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00B9                 {
; 0000 00BA                     sms_char = content_buffer[0]; // ›ﬁÿ ò«—«ò — «Ê· „Õ Ê« „Â„ «” 
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00BB 
; 0000 00BC                     // ‘—ÿ 1: çò ò‰ ¬Ì« „Õ Ê«Ì ÅÌ«„ò 1° 2 Ì« 3 «” ø
; 0000 00BD                     if (sms_char == '1' || sms_char == '2' || sms_char == '3')
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00BE                     {
; 0000 00BF                         glcd_clear();
;PCODE: $00000154 VOL: 0
; 0000 00C0                         glcd_outtextxy(0, 5, "SMS Code:");
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00C1 
; 0000 00C2                         // ⁄œœ œ—Ì«›  ‘œÂ «“ ÅÌ«„ò —« ‰„«Ì‘ »œÂ
; 0000 00C3                         display_buffer[0] = sms_char;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00C4                         glcd_outtextxy(70, 5, display_buffer);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00C5 
; 0000 00C6                         glcd_outtextxy(0, 25, "Enter code on keypad:");
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00C7 
; 0000 00C8                         // „‰ Ÿ— »„«‰  « ò«—»— ò·ÌœÌ —« ›‘«— œÂœ
; 0000 00C9                         do {
;PCODE: $0000016B VOL: 0
; 0000 00CA                             key_pressed = get_key();
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00CB                         } while (key_pressed == 0); //  « Êﬁ Ì ò·ÌœÌ ›‘—œÂ ‰‘œÂ° œ— Õ·ﬁÂ »„«‰
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00CC 
; 0000 00CD                         glcd_outtextxy(0, 45, "You pressed:");
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00CE 
; 0000 00CF                         // ò·Ìœ ›‘—œÂ ‘œÂ —« ‰„«Ì‘ »œÂ
; 0000 00D0                         display_buffer[0] = key_pressed;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00D1                         glcd_outtextxy(90, 45, display_buffer);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00D2                         delay_ms(2000); // 2 À«‰ÌÂ ’»— ò‰  « ò«—»— Ê—ÊœÌ ŒÊœ —« »»Ì‰œ
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00D3 
; 0000 00D4                         // ‘—ÿ 2: ¬Ì« Ê—ÊœÌ ò«—»— »« ÅÌ«„ò ÌòÌ «” ø
; 0000 00D5                         if (key_pressed == sms_char)
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00D6                         {
; 0000 00D7                             // «ê— ÌòÌ »Êœ
; 0000 00D8                             glcd_clear();
;PCODE: $00000189 VOL: 0
; 0000 00D9                             glcd_outtextxy(10, 25, "Code is CORRECT!");
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00DA                             delay_ms(3000); // 10 À«‰ÌÂ ’»— ò‰
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00DB 
; 0000 00DC                             glcd_clear();
;PCODE: $00000193 VOL: 0
; 0000 00DD                             glcd_outtextxy(10, 25, "Program Halted.");
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00DE                             //while(1); // »—‰«„Â —« „ Êﬁ› ò‰
; 0000 00DF                         }
; 0000 00E0                         else
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00E1                         {
; 0000 00E2                             // «ê— ÌòÌ ‰»Êœ
; 0000 00E3                             glcd_clear();
;PCODE: $0000019D VOL: 0
; 0000 00E4                             glcd_outtextxy(5, 25, "Error in entry!");
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00E5                             delay_ms(3000);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00E6 
; 0000 00E7                             glcd_clear();
;PCODE: $000001A7 VOL: 0
; 0000 00E8                             glcd_outtextxy(10, 25, "Program Halted.");
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00E9                             while(1); // »—‰«„Â —« „ Êﬁ› ò‰
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00EA                         }
;PCODE: $000001B2 VOL: 0
; 0000 00EB                     }
; 0000 00EC                     else
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00ED                     {
; 0000 00EE                         // «ê— ⁄œœ ÅÌ«„ò ‘œÂ 1° 2 Ì« 3 ‰»Êœ
; 0000 00EF                         glcd_clear();
;PCODE: $000001B5 VOL: 0
; 0000 00F0                         glcd_outtextxy(5, 25, "SMS code is invalid!");
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00F1                         delay_ms(4000); // 4 À«‰ÌÂ ÅÌ«„ Œÿ« —« ‰„«Ì‘ »œÂ
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00F2                     }
;PCODE: $000001BF VOL: 0
; 0000 00F3                 }
; 0000 00F4 
; 0000 00F5                 // ==========================================================
; 0000 00F6                 // ========== Å«Ì«‰ „‰ÿﬁ ÃœÌœ Ê »«“ê‘  »Â Õ«·  «‰ Ÿ«— ========
; 0000 00F7                 // ==========================================================
; 0000 00F8 
; 0000 00F9 
; 0000 00FA                 // ’›ÕÂ —« »—«Ì ÅÌ«„ »⁄œÌ ¬„«œÂ ò‰
; 0000 00FB                 glcd_clear();
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00FC                 glcd_outtextxy(0, 0, "System Ready.");
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00FD                 glcd_outtextxy(0, 10, "Waiting for SMS...");
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00FE             }
; 0000 00FF         }
;PCODE: $000001D0 VOL: 0
; 0000 0100     }
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 0101 }
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0

	.DSEG
_0x10:
	.BYTE 0xF3
